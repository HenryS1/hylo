(defpackage :monad-tests
  (:use :cl :rove :monad))

(in-package :monad-tests)

(deftest test-mdo
  (testing "mdo processes maybe values"
    (ok (typep (mdo (a (maybe:just 10))
                    (b (maybe:just 11))
                    (c (maybe:nothing))
                    (yield (+ a b c)))
               'maybe:nothing)
        "mdo shortcuits when a nothing value occurs")
    (ok (typep (mdo (a (maybe:just 6))
                    (b (maybe:just 4))
                    (yield (+ a b)))
               'maybe:just)
        "mdo returns just when no nothings occur in a comprehension")
    (ok (= (maybe:value (mdo (a (maybe:just 6))
                             (b (maybe:just 4))
                             (yield (+ a b))))
           10)
        "mdo unwraps values from just")
    (ok (= (maybe:value (mdo (a (maybe:just 7))
                             (let (b 2))
                             (yield (+ a b))))
           9)
        "mdo binds one value in a let clause")
    (ok (= (maybe:value (mdo (a (maybe:just 7))
                             (let (b 2) (c 1))
                             (yield (+ a b c))))
           10)
        "mdo binds multiple values in a let clause")
    (ok (= (maybe:value (mdo (a (maybe:just 7))
                             (let (b 3))
                             (c (maybe:just 2))
                             (let (d 1))
                             (e (maybe:just 9))
                             (yield (+ a b c d e))))
           22)
        "mdo binds values in multiple let clauses")))
